package com.quicktutorialz.javalin;

import io.javalin.Javalin;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.concurrent.CompletableFuture;

public class MainApplication {

    private static Logger log = LoggerFactory.getLogger(MainApplication.class);

    /*
    http://www.javamagazine.mozaicreader.com/MarchApril2019#&pageSet=15&page=0
     */

    /*
    Test with:
    curl -X GET 'http://localhost:7000/javalin-api/'
    curl -X GET 'http://localhost:7000/javalin-api/hello/alessandro'
    curl -X GET 'http://localhost:7000/javalin-api/hi?name=alessandro'
    curl -X POST 'http://localhost:7000/javalin-api/ola' -H 'Content-Type:application/x-www-form-urlencoded; charset:utf-8' -d 'name=alessandro&surname=argentieri'
    curl -X POST 'http://localhost:7000/javalin-api/wei' -d 'alessandro'
    curl -X POST 'http://localhost:7000/javalin-api/you' -H 'Content-Type:application/json; charset:utf-8' -d '{"title":"mr.","name":"alessandro","surname":"argentieri"}'
    curl -X POST 'http://localhost:7000/javalin-api/user' -H 'Content-Type:application/json; charset:utf-8' -d '{"title":"mr.","name":"alessandro","surname":"argentieri"}'
    curl -X POST 'http://localhost:7000/javalin-api/user' -H 'Content-Type:application/json; charset:utf-8' -d '{"title":"mr.","name":"alessandro"}'
    curl -X POST 'http://localhost:7000/javalin-api/user' -H 'Content-Type:application/json; charset:utf-8' -d '{"title":"mr.","name":"alessandro","onesto":"argentieri"}'
    curl -X POST 'http://localhost:7000/javalin-api/completable/you' -H 'Content-Type:application/json; charset:utf-8' -d '{"title":"mr.","name":"alessandro","surname":"argentieri"}'
    curl -X GET 'http://localhost:7000/javalin-api/integer/34'
    curl -X GET 'http://localhost:7000/javalin-api/integer/34a'
     */


    public static void main(String[] args){
        Javalin app = Javalin.create()
                             .contextPath("/javalin-api")
                             .enableAutogeneratedEtags()
                             .enableCorsForAllOrigins()
                             .enableDebugLogging()
                             .enableStaticFiles("/public")
                             .start(7000);
        app.get("/", ctx->ctx.result("Hello world!"));

        //pathParam
        app.get("/hello/:name", ctx->{
            String name  = ctx.pathParam("name");
            ctx.result("Hello " + name);
        });

        //queryParam
        app.get("/hi", ctx->{
            String name  = ctx.queryParam("name");
            ctx.result("Hello " + name);
        });

        //formParam
        app.post("/ola", ctx->{
            String name  = ctx.formParam("name");
            String surname  = ctx.formParam("surname");
            ctx.result("Hello " + name + " " + surname);
        });
        //stringBody
        app.post("/wei", ctx->{
            String name  = ctx.body();
            ctx.result("Hello " + name);
        });

        //jsonBody
        app.post("/you", ctx->{
            User user  = ctx.bodyAsClass(User.class);
            ctx.status(200);
            ctx.header("header", "value");
            ctx.json(user);
        });

        //inputValidation
        app.get("/integer/:value", ctx->{
            int value  = ctx.validatedPathParam("value").asInt().getOrThrow();
            ctx.result("Int is valid: " + value);
        });
        //bodyValidation
        app.post("/user", ctx->{
            User user  = ctx.validatedBodyAsClass(User.class).getOrThrow();
            ctx.json(user);
        });

        //filtering all
        app.before(ctx->{log.info(ctx.path());});

        //filtering a Path
        app.before("/you/*", ctx->{log.info(ctx.ip());});

        //after Responding to a Path
        app.after("/you/*", ctx->{log.info(ctx.url());});

        //completableFutureResponse
        app.post("/completable/you", ctx->{
            ctx.json( CompletableFuture.supplyAsync(()-> ctx.bodyAsClass(User.class)) );
        });


    }
}
